# Fastfile for Vibe8 (formerly Flirrt)

default_platform(:ios)

platform :ios do
  before_all do
    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
  end

  desc "Run all unit and UI tests"
  lane :test do
    run_tests(
      workspace: "iOS/Flirrt.xcodeproj",
      scheme: "Flirrt",
      device: "iPhone 15",
      ios_version: ENV["IOS_VERSION"] || "18.0",
      code_coverage: true,
      output_directory: "./fastlane/test_output",
      result_bundle: true,
      clean: true
    )
  end

  desc "Build the app for testing"
  lane :build do
    gym(
      workspace: "iOS/Flirrt.xcodeproj",
      scheme: "Flirrt",
      configuration: "Debug",
      skip_archive: true,
      skip_package_ipa: true,
      clean: true,
      output_directory: "./build",
      buildlog_path: "./fastlane/logs"
    )
  end

  desc "Build and run tests (CI pipeline)"
  lane :ci do
    test
    build
  end

  desc "Deploy a beta build to TestFlight"
  lane :beta do
    # Ensure clean state
    clean_build_artifacts

    # Match certificates (will be configured later)
    # match(type: "appstore", readonly: true)

    # Increment build number
    increment_build_number(
      xcodeproj: "iOS/Flirrt.xcodeproj"
    )

    # Build the app
    gym(
      workspace: "iOS/Flirrt.xcodeproj",
      scheme: "Flirrt",
      configuration: "Release",
      export_method: "app-store",
      output_directory: "./build",
      clean: true
    )

    # Upload to TestFlight
    pilot(
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: false
    )

    # Commit version bump
    commit_version_bump(
      message: "Version bump for TestFlight build [skip ci]",
      xcodeproj: "iOS/Flirrt.xcodeproj"
    )
  end

  desc "Deploy to App Store for review"
  lane :release do
    # Ensure clean state
    clean_build_artifacts

    # Match certificates
    # match(type: "appstore", readonly: true)

    # Increment version number
    increment_version_number(
      bump_type: "patch",
      xcodeproj: "iOS/Flirrt.xcodeproj"
    )

    # Build the app
    gym(
      workspace: "iOS/Flirrt.xcodeproj",
      scheme: "Flirrt",
      configuration: "Release",
      export_method: "app-store",
      output_directory: "./build",
      clean: true
    )

    # Upload to App Store Connect
    deliver(
      submit_for_review: true,
      automatic_release: false,
      force: true,
      skip_metadata: false,
      skip_screenshots: false,
      precheck_include_in_app_purchases: false
    )

    # Commit version bump
    commit_version_bump(
      message: "Version bump for App Store release [skip ci]",
      xcodeproj: "iOS/Flirrt.xcodeproj"
    )

    # Create git tag
    add_git_tag(
      tag: "v#{get_version_number(xcodeproj: 'iOS/Flirrt.xcodeproj')}"
    )
  end

  desc "Setup match for code signing"
  lane :setup_match do
    match(
      type: "development",
      readonly: false
    )
    match(
      type: "appstore",
      readonly: false
    )
  end

  desc "Clean build artifacts"
  private_lane :clean_build_artifacts do
    sh("rm -rf ../build")
    sh("rm -rf ../fastlane/test_output")
    sh("rm -rf ../fastlane/logs")
  end

  # Error handling
  error do |lane, exception|
    UI.error("Error in lane #{lane}: #{exception.message}")
  end
end
