-- A/B Testing Schema Migration
-- Based on expert recommendations from Gemini 2.5 Pro and Perplexity Sonar Pro
-- 
-- This migration creates tables for:
-- 1. User experiment assignments (consistent bucketing)
-- 2. Event tracking (for analytics and metrics)
--
-- Privacy-compliant: Uses anonymous UUIDs, no PII storage

-- Table: user_experiment_assignments
-- Stores which variant each user is assigned to for each experiment
-- Ensures consistent user experience across sessions
CREATE TABLE IF NOT EXISTS user_experiment_assignments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL,
    experiment_id TEXT NOT NULL,
    variant_name TEXT NOT NULL,
    variant_config JSONB NOT NULL,
    assigned_at TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    
    -- Ensure one assignment per user per experiment
    UNIQUE(user_id, experiment_id)
);

-- Indexes for efficient querying
CREATE INDEX IF NOT EXISTS idx_user_experiment_assignments_user_id 
    ON user_experiment_assignments(user_id);
CREATE INDEX IF NOT EXISTS idx_user_experiment_assignments_experiment_id 
    ON user_experiment_assignments(experiment_id);
CREATE INDEX IF NOT EXISTS idx_user_experiment_assignments_assigned_at 
    ON user_experiment_assignments(assigned_at);

-- Table: events
-- Stores all user interaction events for analytics
-- Uses JSONB for flexible metadata (experiment assignments, custom data)
CREATE TABLE IF NOT EXISTS events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID NOT NULL,
    event_name TEXT NOT NULL,
    timestamp TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    
    -- JSONB for flexible metadata, including experiment assignments
    -- Example: {"experiments": [{"experimentId": "exp_gamification_prompts", "variantName": "playful"}], "custom_field": "value"}
    metadata JSONB,
    
    -- Optional numeric value (e.g., latency in ms, cost in cents)
    value NUMERIC
);

-- Indexes for efficient analytics queries
CREATE INDEX IF NOT EXISTS idx_events_user_id 
    ON events(user_id);
CREATE INDEX IF NOT EXISTS idx_events_event_name 
    ON events(event_name);
CREATE INDEX IF NOT EXISTS idx_events_timestamp 
    ON events(timestamp DESC);
CREATE INDEX IF NOT EXISTS idx_events_event_name_timestamp 
    ON events(event_name, timestamp DESC);

-- GIN index for JSONB metadata queries (enables fast filtering by experiment/variant)
CREATE INDEX IF NOT EXISTS idx_events_metadata_gin 
    ON events USING GIN (metadata);

-- Comments for documentation
COMMENT ON TABLE user_experiment_assignments IS 'Stores user assignments to A/B test variants for consistent bucketing';
COMMENT ON TABLE events IS 'Stores all user interaction events for analytics and A/B test analysis';
COMMENT ON COLUMN events.metadata IS 'JSONB field containing experiment assignments and custom event data';
COMMENT ON COLUMN events.value IS 'Optional numeric value for metrics like latency, cost, or ratings';

-- Example queries for analytics (for reference, not executed):
-- 
-- Get suggestion acceptance rate by variant:
-- SELECT 
--     metadata->'experiments'->0->>'variantName' as variant,
--     COUNT(*) FILTER (WHERE event_name = 'suggestion_accepted') * 100.0 / 
--     NULLIF(COUNT(*) FILTER (WHERE event_name = 'suggestion_shown'), 0) as acceptance_rate_pct
-- FROM events
-- WHERE metadata->'experiments'->0->>'experimentId' = 'exp_gamification_prompts'
-- GROUP BY variant;
--
-- Get average AI generation latency by model:
-- SELECT 
--     metadata->'experiments'->0->>'variantName' as variant,
--     AVG(value) as avg_latency_ms,
--     PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY value) as p95_latency_ms
-- FROM events
-- WHERE event_name = 'ai_generation_latency'
-- GROUP BY variant;

